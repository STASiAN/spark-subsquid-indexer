import { BlockHeader } from '@subsquid/fuel-normalization';
import { ArchiveClient } from '@subsquid/util-internal-archive-client';
import { RangeRequestList } from '@subsquid/util-internal-range';
import { DataRequest } from '../data/data-request';
import { PartialBlock } from '../data/data-partial';
export declare class FuelGateway {
    private client;
    constructor(client: ArchiveClient);
    getFinalizedHeight(): Promise<number>;
    getBlockHash(height: number): Promise<string | undefined>;
    getBlockHeader(height: number): Promise<BlockHeader>;
    getBlockStream(requests: RangeRequestList<DataRequest>, stopOnHead?: boolean | undefined): AsyncIterable<PartialBlock[]>;
}
//# sourceMappingURL=source.d.ts.map