import { FieldSelection } from '../data/model';
export declare const getDataSchema: (obj: FieldSelection) => import("@subsquid/util-internal-validation").Validator<{
    header: {
        number: number;
        hash: string;
        daHeight?: bigint | undefined;
        transactionsRoot?: string | undefined;
        transactionsCount?: number | undefined;
        messageReceiptCount?: number | undefined;
        applicationHash?: string | undefined;
        prevRoot?: string | undefined;
        time?: bigint | undefined;
        eventInboxRoot?: string | undefined;
        consensusParametersVersion?: number | undefined;
        stateTransitionBytecodeVersion?: number | undefined;
        messageOutboxRoot?: string | undefined;
    };
    transactions?: {
        index: number;
        bytecodeWitnessIndex?: number | undefined;
        bytecodeRoot?: string | undefined;
        hash?: string | undefined;
        inputAssetIds?: string[] | undefined;
        policies?: {
            tip?: bigint | undefined;
            witnessLimit?: bigint | undefined;
            maturity?: number | undefined;
            maxFee?: bigint | undefined;
        } | undefined;
        inputContract?: {
            utxoId: string;
            balanceRoot: string;
            stateRoot: string;
            txPointer: string;
            contractId: string;
        } | undefined;
        inputContracts?: string[] | undefined;
        isCreate?: boolean | undefined;
        isMint?: boolean | undefined;
        isScript?: boolean | undefined;
        isUpgrade?: boolean | undefined;
        isUpload?: boolean | undefined;
        maturity?: number | undefined;
        mintAmount?: bigint | undefined;
        mintAssetId?: string | undefined;
        mintGasPrice?: bigint | undefined;
        outputContract?: {
            inputIndex: number;
            balanceRoot: string;
            stateRoot: string;
        } | undefined;
        rawPayload?: string | undefined;
        receiptsRoot?: string | undefined;
        salt?: string | undefined;
        script?: string | undefined;
        scriptData?: string | undefined;
        scriptGasLimit?: bigint | undefined;
        storageSlots?: string[] | undefined;
        txPointer?: string | undefined;
        type?: "Script" | "Create" | "Mint" | undefined;
        witnesses?: string[] | undefined;
        status?: {
            time: bigint;
            type: "SubmittedStatus";
        } | {
            transactionId: string;
            time: bigint;
            totalGas: bigint;
            totalFee: bigint;
            programState?: {
                returnType: "RETURN" | "RETURN_DATA" | "REVERT";
                data: string;
            } | undefined;
            type: "SuccessStatus";
        } | {
            reason: string;
            type: "SqueezedOutStatus";
        } | {
            transactionId: string;
            time: bigint;
            reason: string;
            totalGas: bigint;
            totalFee: bigint;
            programState?: {
                returnType: "RETURN" | "RETURN_DATA" | "REVERT";
                data: string;
            } | undefined;
            type: "FailureStatus";
        } | undefined;
        subsectionIndex?: number | undefined;
        subsectionsNumber?: number | undefined;
        proofSet?: string[] | undefined;
        upgradePurpose?: {
            witnessIndex: number;
            checksum: string;
            type: "ConsensusParametersPurpose";
        } | {
            root: string;
            type: "StateTransitionPurpose";
        } | undefined;
    }[] | undefined;
    receipts?: {
        transactionIndex: number;
        index: number;
        amount?: bigint | undefined;
        assetId?: string | undefined;
        contract?: string | undefined;
        contractId?: string | undefined;
        data?: string | undefined;
        digest?: string | undefined;
        gas?: bigint | undefined;
        gasUsed?: bigint | undefined;
        is?: bigint | undefined;
        len?: bigint | undefined;
        nonce?: string | undefined;
        param1?: bigint | undefined;
        param2?: bigint | undefined;
        pc?: bigint | undefined;
        ptr?: bigint | undefined;
        ra?: bigint | undefined;
        rb?: bigint | undefined;
        rc?: bigint | undefined;
        rd?: bigint | undefined;
        reason?: bigint | undefined;
        receiptType?: "CALL" | "RETURN" | "RETURN_DATA" | "PANIC" | "REVERT" | "LOG" | "LOG_DATA" | "TRANSFER" | "TRANSFER_OUT" | "SCRIPT_RESULT" | "MESSAGE_OUT" | "MINT" | "BURN" | undefined;
        recipient?: string | undefined;
        result?: bigint | undefined;
        sender?: string | undefined;
        subId?: string | undefined;
        to?: string | undefined;
        toAddress?: string | undefined;
        val?: bigint | undefined;
    }[] | undefined;
    inputs?: ({
        transactionIndex: number;
        index: number;
        utxoId?: string | undefined;
        owner?: string | undefined;
        amount?: bigint | undefined;
        assetId?: string | undefined;
        txPointer?: string | undefined;
        witnessIndex?: number | undefined;
        maturity?: number | undefined;
        predicateGasUsed?: bigint | undefined;
        predicate?: string | undefined;
        predicateData?: string | undefined;
        type: "InputCoin";
    } | {
        transactionIndex: number;
        index: number;
        utxoId?: string | undefined;
        balanceRoot?: string | undefined;
        stateRoot?: string | undefined;
        txPointer?: string | undefined;
        contractId?: string | undefined;
        type: "InputContract";
    } | {
        transactionIndex: number;
        index: number;
        sender?: string | undefined;
        recipient?: string | undefined;
        amount?: bigint | undefined;
        nonce?: string | undefined;
        witnessIndex?: number | undefined;
        predicateGasUsed?: bigint | undefined;
        data?: string | undefined;
        predicate?: string | undefined;
        predicateData?: string | undefined;
        type: "InputMessage";
    })[] | undefined;
    outputs?: ({
        transactionIndex: number;
        index: number;
        to?: string | undefined;
        amount?: bigint | undefined;
        assetId?: string | undefined;
        type: "CoinOutput";
    } | {
        transactionIndex: number;
        index: number;
        inputIndex?: number | undefined;
        balanceRoot?: string | undefined;
        stateRoot?: string | undefined;
        type: "ContractOutput";
    } | {
        transactionIndex: number;
        index: number;
        to?: string | undefined;
        amount?: bigint | undefined;
        assetId?: string | undefined;
        type: "ChangeOutput";
    } | {
        transactionIndex: number;
        index: number;
        to?: string | undefined;
        amount?: bigint | undefined;
        assetId?: string | undefined;
        type: "VariableOutput";
    } | {
        transactionIndex: number;
        index: number;
        contract?: string | undefined;
        stateRoot?: string | undefined;
        type: "ContractCreated";
    })[] | undefined;
}, {
    header: {
        number: number;
        hash: string;
        daHeight?: string | undefined;
        transactionsRoot?: string | undefined;
        transactionsCount?: number | undefined;
        messageReceiptCount?: number | undefined;
        applicationHash?: string | undefined;
        prevRoot?: string | undefined;
        time?: string | undefined;
        eventInboxRoot?: string | undefined;
        consensusParametersVersion?: number | undefined;
        stateTransitionBytecodeVersion?: number | undefined;
        messageOutboxRoot?: string | undefined;
    };
    transactions?: {
        index: number;
        bytecodeWitnessIndex?: number | null | undefined;
        bytecodeRoot?: string | null | undefined;
        hash?: string | undefined;
        inputAssetIds?: string[] | null | undefined;
        policies?: {
            tip?: string | null | undefined;
            witnessLimit?: string | null | undefined;
            maturity?: number | null | undefined;
            maxFee?: string | null | undefined;
        } | null | undefined;
        inputContract?: {
            utxoId: string;
            balanceRoot: string;
            stateRoot: string;
            txPointer: string;
            contractId: string;
        } | null | undefined;
        inputContracts?: string[] | null | undefined;
        isCreate?: boolean | undefined;
        isMint?: boolean | undefined;
        isScript?: boolean | undefined;
        isUpgrade?: boolean | undefined;
        isUpload?: boolean | undefined;
        maturity?: number | null | undefined;
        mintAmount?: string | null | undefined;
        mintAssetId?: string | null | undefined;
        mintGasPrice?: string | null | undefined;
        outputContract?: {
            inputIndex: number;
            balanceRoot: string;
            stateRoot: string;
        } | null | undefined;
        rawPayload?: string | null | undefined;
        receiptsRoot?: string | null | undefined;
        salt?: string | null | undefined;
        script?: string | null | undefined;
        scriptData?: string | null | undefined;
        scriptGasLimit?: string | null | undefined;
        storageSlots?: string[] | null | undefined;
        txPointer?: string | null | undefined;
        type?: "Script" | "Create" | "Mint" | undefined;
        witnesses?: string[] | null | undefined;
        status?: {
            time: string;
            type: "SubmittedStatus";
        } | {
            transactionId: string;
            time: string;
            totalGas: string;
            totalFee: string;
            programState?: {
                returnType: "RETURN" | "RETURN_DATA" | "REVERT";
                data: string;
            } | null | undefined;
            type: "SuccessStatus";
        } | {
            reason: string;
            type: "SqueezedOutStatus";
        } | {
            transactionId: string;
            time: string;
            reason: string;
            totalGas: string;
            totalFee: string;
            programState?: {
                returnType: "RETURN" | "RETURN_DATA" | "REVERT";
                data: string;
            } | null | undefined;
            type: "FailureStatus";
        } | null | undefined;
        subsectionIndex?: number | null | undefined;
        subsectionsNumber?: number | null | undefined;
        proofSet?: string[] | null | undefined;
        upgradePurpose?: {
            witnessIndex: number;
            checksum: string;
            type: "ConsensusParametersPurpose";
        } | {
            root: string;
            type: "StateTransitionPurpose";
        } | null | undefined;
    }[] | null | undefined;
    receipts?: {
        transactionIndex: number;
        index: number;
        amount?: string | null | undefined;
        assetId?: string | null | undefined;
        contract?: string | null | undefined;
        contractId?: string | null | undefined;
        data?: string | null | undefined;
        digest?: string | null | undefined;
        gas?: string | null | undefined;
        gasUsed?: string | null | undefined;
        is?: string | null | undefined;
        len?: string | null | undefined;
        nonce?: string | null | undefined;
        param1?: string | null | undefined;
        param2?: string | null | undefined;
        pc?: string | null | undefined;
        ptr?: string | null | undefined;
        ra?: string | null | undefined;
        rb?: string | null | undefined;
        rc?: string | null | undefined;
        rd?: string | null | undefined;
        reason?: string | null | undefined;
        receiptType?: "CALL" | "RETURN" | "RETURN_DATA" | "PANIC" | "REVERT" | "LOG" | "LOG_DATA" | "TRANSFER" | "TRANSFER_OUT" | "SCRIPT_RESULT" | "MESSAGE_OUT" | "MINT" | "BURN" | undefined;
        recipient?: string | null | undefined;
        result?: string | null | undefined;
        sender?: string | null | undefined;
        subId?: string | null | undefined;
        to?: string | null | undefined;
        toAddress?: string | null | undefined;
        val?: string | null | undefined;
    }[] | null | undefined;
    inputs?: ({
        transactionIndex: number;
        index: number;
        utxoId?: string | undefined;
        owner?: string | undefined;
        amount?: string | undefined;
        assetId?: string | undefined;
        txPointer?: string | undefined;
        witnessIndex?: number | undefined;
        maturity?: number | undefined;
        predicateGasUsed?: string | undefined;
        predicate?: string | undefined;
        predicateData?: string | undefined;
        type: "InputCoin";
    } | {
        transactionIndex: number;
        index: number;
        utxoId?: string | undefined;
        balanceRoot?: string | undefined;
        stateRoot?: string | undefined;
        txPointer?: string | undefined;
        contractId?: string | undefined;
        type: "InputContract";
    } | {
        transactionIndex: number;
        index: number;
        sender?: string | undefined;
        recipient?: string | undefined;
        amount?: string | undefined;
        nonce?: string | undefined;
        witnessIndex?: number | undefined;
        predicateGasUsed?: string | undefined;
        data?: string | undefined;
        predicate?: string | undefined;
        predicateData?: string | undefined;
        type: "InputMessage";
    })[] | null | undefined;
    outputs?: ({
        transactionIndex: number;
        index: number;
        to?: string | undefined;
        amount?: string | undefined;
        assetId?: string | undefined;
        type: "CoinOutput";
    } | {
        transactionIndex: number;
        index: number;
        inputIndex?: number | undefined;
        balanceRoot?: string | undefined;
        stateRoot?: string | undefined;
        type: "ContractOutput";
    } | {
        transactionIndex: number;
        index: number;
        to?: string | undefined;
        amount?: string | undefined;
        assetId?: string | undefined;
        type: "ChangeOutput";
    } | {
        transactionIndex: number;
        index: number;
        to?: string | undefined;
        amount?: string | undefined;
        assetId?: string | undefined;
        type: "VariableOutput";
    } | {
        transactionIndex: number;
        index: number;
        contract?: string | undefined;
        stateRoot?: string | undefined;
        type: "ContractCreated";
    })[] | null | undefined;
}>;
export declare function isEmpty(obj: object): boolean;
//# sourceMappingURL=data-schema.d.ts.map