import { RangeRequestList } from '@subsquid/util-internal-range';
import { HttpDataSource } from '@subsquid/fuel-data/lib/data-source';
import { BlockHeader } from '@subsquid/fuel-data/lib/raw-data';
import { DataRequest } from './data/data-request';
import { PartialBlock } from './data/data-partial';
export declare class GraphqlDataSource {
    private baseDataSource;
    constructor(baseDataSource: HttpDataSource);
    getFinalizedHeight(): Promise<number>;
    getBlockHash(height: number): Promise<string | undefined>;
    getBlockHeader(height: number): Promise<BlockHeader | undefined>;
    getBlockStream(requests: RangeRequestList<DataRequest>, stopOnHead?: boolean): AsyncIterable<PartialBlock[]>;
}
//# sourceMappingURL=graphql.d.ts.map