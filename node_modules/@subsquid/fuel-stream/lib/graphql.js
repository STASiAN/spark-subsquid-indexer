"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GraphqlDataSource = void 0;
const util_internal_range_1 = require("@subsquid/util-internal-range");
const fuel_normalization_1 = require("@subsquid/fuel-normalization");
const filter_1 = require("./filter");
class GraphqlDataSource {
    constructor(baseDataSource) {
        this.baseDataSource = baseDataSource;
    }
    async getFinalizedHeight() {
        return this.baseDataSource.getFinalizedHeight();
    }
    getBlockHash(height) {
        return this.baseDataSource.getBlockHash(height);
    }
    getBlockHeader(height) {
        return this.baseDataSource.getBlockHeader(height);
    }
    async *getBlockStream(requests, stopOnHead) {
        for await (let batch of this.baseDataSource.getFinalizedBlocks((0, util_internal_range_1.mapRangeRequestList)(requests, toRawDataRequest), stopOnHead)) {
            let blocks = batch.blocks.map(b => (0, fuel_normalization_1.mapRawBlock)(b));
            (0, filter_1.filterBlockBatch)(requests, blocks);
            yield blocks;
        }
    }
}
exports.GraphqlDataSource = GraphqlDataSource;
function toRawDataRequest(req) {
    return {
        transactions: !!req.transactions?.length
            || !!req.inputs?.length
            || !!req.outputs?.length
            || !!req.receipts?.length,
        inputs: !!req.inputs?.length,
        outputs: !!req.outputs?.length,
        receipts: !!req.receipts?.length
    };
}
//# sourceMappingURL=graphql.js.map